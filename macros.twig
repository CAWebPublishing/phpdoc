{% macro correct_default(__value) %}
{% set val = __value|trim %}
{% set val = val matches '/rue/' ? "true" : val %}
{% set val = val matches '/ull/' ? "null" : val %}
{% set val = val matches '/alse/' ? "false" : val %}
{{ val~';' }}
{% endmacro %}

{% macro github_file_link(__prop, __icon = '', __link_classes = '') %}
{% set __settings = project.settings.custom %}
{% set __link = __settings['github_ref'] ~ __settings['github_user'] ~ '/CAWeb/blob/' ~ __settings['github_branch'] ~ '/' %}
{% set __path = __prop.path %}
{% set __href = __link ~ __path %}
{% set __line = 0 != __prop.line ? __prop.line : '' %}
{% set __href = __line is not empty ? __href ~ '#L' ~ __line : __href %}
{% set __display %}
<span class="ca-gov-icon-{{ __icon }} d-inline h4"></span>
{% endset %}
<a target="_blank" href="{{  __href  }}" class="{{ __link_classes is not empty ? __link_classes : '' }}">{{ __icon is not empty ? __display : __path }}</a>{{ __line is not empty ? ':' ~ __line : ''}}
{% endmacro  %}

{% macro wp_hook_link(__link, __action) %}
{% set invalid_hooks = ['publish_future_post'] %}

{% set __settings = project.settings.custom %}
{% set __link = __settings['wp_hook_ref'] ~ __link  %}

{% if __wp_action not in invalid_hooks %}
<a target="_blank" href="{{ __link }}">{{ __action }}</a>
{% endif %}
{% endmacro  %}

{# Used to correct dynamic wordpress action/filters #}
{% macro wp_hook_corrections(__action) %}
    {# if action has caweb_ action request #}
    {% if __action matches '/caweb_/' %}
        {% set __action = __action|split('caweb_')[0] ~ 'action' %}
    {% endif %}

    {# if action loads dynamic load-pagenow #}
    {% if __action matches '/load-.*\.php/' %}
        {% set __action = 'load-pagenow' %}
    {% endif %}

    {# if action loads dynamic admin_head #}
    {% if __action matches '/admin_head-.*\.php/' %}
        {% set __action = 'admin_head-hook-suffix' %}
    {% endif %}

    {# if action loads dynamic admin_footer #}
    {% if __action matches '/admin_footer-.*\.php/' %}
        {% set __action = 'admin_footer-globalshook_suffix' %}
    {% endif %}

    {{ __action }}
{% endmacro %}

{% macro wordpress_hooks(__node = '', __classes = false, __hook = 'action', __link = false, __detect = false) %}
{% set functions = [] %}
{% if __node is not empty %}
    {# iterate thru node functions #}
    {% for __f in __node.functions|sort_asc %}
        {# Save function information #}
        {% set functions = functions|merge([__f]) %}

        {# if including classes #}
        {% if __classes %}
            {# iterate thru classes in the file  #}
            {% for __class in __node.classes|sort_asc %}
                {# iterate thru class methods #}
                {% for __c in __class.methods|sort_asc %}
                    {# Save function information #}
                    {% set functions = functions|merge([__c]) %}
                {% endfor %}
            {% endfor %}
        {% endif %}
    {% endfor %}
{% else %}
    {# iterate thru all project files #}
    {% for __obj in project.files|sort_asc %}
        {# iterate thru all file functions #}
        {% for __f in __obj.functions|sort_asc %}
            {# Save function information #}
            {% set functions = functions|merge([__f]) %}
        {% endfor %}

        {# if including classes #}
        {% if __classes %}
            {# iterate thru classes in the file  #}
            {% for __class in __obj.classes|sort_asc %}
                {# iterate thru class methods #}
                {% for __c in __class.methods|sort_asc %}
                    {# Save function information #}
                    {% set functions = functions|merge([__c]) %}
                {% endfor %}
            {% endfor %}
        {% endif %}    
    {% endfor %}
{% endif %}
{% set t = false %}
{# iterate thru all functions #}
{% for __f in 0..functions|length %}
{% set is_action = '' %}
{# iterate thru function tags, if function has category tag reference save it #}
{% for tag_name,tags in functions[__f].tags if tag_name in ['category'] %}
    {% set is_action = tags.0.description %}
{% endfor %}
{# if category tag was found #}
{% if is_action is not empty %}
    {# get all hooks in category #}
    {% set __hooks = '{' == is_action|first ? is_action|slice(1, is_action|length - 2 )|trim : is_action %}
    {% set __hooks = __hooks|split('\n') %}

    {% if __hooks|length > 0 %}
        
        {# iterate over category entries #}
        {% for __entry in __hooks %}

            {# if entry matches hook #}
            {% if "add_" ~ __hook == __entry|slice(0,10) %}
                {# get action_hook from entry #}
                {% set __entry = __entry|slice(("add_" ~ __hook)|length + 1) %}
                {% set __wp_action = __entry|split(',')[0] %}
    
                {% set __entry = __entry|replace({ (__wp_action ~ ',') : ""}) %}
                {% set __wp_action = __wp_action|replace({"'" : ""})|trim %}
                {% set __wp_action_link = _self.wp_hook_corrections( __wp_action )|trim %}

                {# get action callback function from entry #}
                {% set __callback = "'" == __entry|trim|first ? __entry|trim|slice(1)|split("'")[0] : __entry|split(')')[0] ~ ')' %}
                {% set __entry = "'" == __entry|trim|first ? __entry|replace({ ("'" ~ __callback ~ "'") : ""}) : __entry|replace({ (__callback) : ""}) %}

                {# get action priority and argument count from entry #}
                {% set __priority = __entry|split(',')[1] is not empty ? __entry|split(',')[1] : '10' %}
                {% set __arg_count = __entry|split(',')[2] is not empty ? __entry|split(',')[2]|replace({')' : '', ';' : ''}) : '' %}

                {% if false == t %}
                    {% set t = true %}
                    {% if __detect %}
                    <li><a href="#{{ __hook }}s">{{ __hook|title }}s</a></li>
                    {% else %}
                    <h2 id="{{ __hook }}s">{{ __hook|title }}s</h2>
                    {% endif %}
                {% endif %}
                {% if not __detect %}
                <div class="border-bottom border-info mb-3">
                    <p>WordPress Hook: {{ _self.wp_hook_link(__wp_action_link, __wp_action) }}</p>

                    {% if functions[__f].description is not empty %}
                    <p>Description: {{ functions[__f].description }}</p>
                    {% endif %}
                    
                    <p>Callback Function: {% if __link %}<a href="#function-{{ __callback }}">{{ __callback }}</a>{% else %}{{ __callback }}{% endif %}</p>
                    
                    <p>Priority: {{ __priority|replace({')' : '', ';' : ''}) }}</p>
                    
                    {% if __arg_count is not empty %}
                    <p>Arguments: {{ __arg_count }}</p>
                    {% endif %}
                    
                    <p>Source: {{ _self.github_file_link(functions[__f]) }}</p>
                </div>
                {% endif %}
            {% endif %}

        {% endfor %}
    {% endif %}
{% endif %}

{% endfor %}

{% endmacro %}
